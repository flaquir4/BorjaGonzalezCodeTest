apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.gitlab.arturbosch.detekt'
apply plugin: 'jacoco'

jacoco {
    toolVersion = jacoco_version
}


task jacocoTestReport(type:JacocoReport, dependsOn: "check") {
    reports {
        xml.enabled true
        csv.enabled false
    }
    def excludes = [
            '**/R.class',
            '**/R$*.class',
            '**/*$ViewInjector*.*',
            '**/BuildConfig.*',
            '**/Manifest*.*',
            '**/*Test*.*',
            'android/**/*.*',
            '**/*Fragment.*',
            '**/*Activity.*'
    ]
    // generated classes
    classDirectories.setFrom( fileTree(
            dir: "$buildDir/intermediates/classes/debug",
            excludes: excludes
    ) + fileTree(
            dir: "$buildDir/tmp/kotlin-classes/debug",
            excludes: excludes
    )
    )
    // sources
    sourceDirectories.setFrom( files([
            android.sourceSets.main.java.srcDirs,
            "src/main/kotlin"
    ]))
    executionData.setFrom(files("$buildDir/jacoco/testDebugUnitTest.exec"))
}


android {
    compileSdkVersion 29

    defaultConfig {
        applicationId "com.flaquir4.codetest"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug{
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.core:core-ktx:$ktx_version"
    implementation "androidx.appcompat:appcompat:$app_compat_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout_version"
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test.ext:junit:$andoid_test_Version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    detektPlugins "io.gitlab.arturbosch.detekt:detekt-formatting:$detekt_version"
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$canary_leak_version"
}

detekt {
    failFast = true
    buildUponDefaultConfig = true
    autoCorrect = true
    reports {
        html.enabled = true
        xml.enabled = true
    }
}

tasks.detekt.jvmTarget = "1.8"